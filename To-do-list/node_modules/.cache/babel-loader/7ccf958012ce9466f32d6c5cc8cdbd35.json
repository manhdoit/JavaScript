{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/components/Header.js\";\nimport React, { memo, useState } from 'react';\nconst Header = memo(props => {\n  const [text, setText] = useState('');\n  const {\n    addTodo,\n    isCheckAll\n  } = props;\n\n  const onAddTodo = (e = {}) => {\n    if (e.key === 'Enter' && text) {\n      console.log(text);\n      addTodo({\n        id: new Date().valueOf(),\n        text,\n        isCompleted: false\n      });\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Header\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-todo\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => onAddTodo(e),\n    checked: isCheckAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n});\nexport default Header;","map":{"version":3,"sources":["/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/components/Header.js"],"names":["React","memo","useState","Header","props","text","setText","addTodo","isCheckAll","onAddTodo","e","key","console","log","id","Date","valueOf","isCompleted","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,MAAMC,MAAM,GAAGF,IAAI,CAAEG,KAAD,IAAW;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BJ,KAAhC;;AACA,QAAMK,SAAS,GAAG,CAACC,CAAC,GAAG,EAAL,KAAY;AAC1B,QAAIA,CAAC,CAACC,GAAF,KAAU,OAAV,IAAqBN,IAAzB,EAA+B;AAC3BO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAE,MAAAA,OAAO,CAAE;AACLO,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EADC;AAELX,QAAAA,IAFK;AAGLY,QAAAA,WAAW,EAAE;AAHR,OAAF,CAAP;AAKAX,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAVD;;AAWA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,UAAlB;AACQ,IAAA,KAAK,EAAID,IADjB;AAEQ,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAFhC;AAGQ,IAAA,UAAU,EAAKT,CAAD,IAAOD,SAAS,CAACC,CAAD,CAHtC;AAIQ,IAAA,OAAO,EAAIF,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAaH,CA3BkB,CAAnB;AA4BA,eAAeL,MAAf","sourcesContent":["import React, { memo, useState } from 'react';\n\nconst Header = memo((props) => {\n    const [text, setText] = useState('')\n    const { addTodo, isCheckAll } = props\n    const onAddTodo = (e = {}) => {\n        if (e.key === 'Enter' && text) {\n            console.log(text)\n            addTodo( {\n                id: new Date().valueOf(),\n                text,\n                isCompleted: false\n            })\n            setText('')\n        }\n    }\n    return (\n        <header className=\"header\">\n            <h1>Header</h1>\n            <input  className=\"new-todo\" \n                    value = {text}\n                    onChange={(e) => setText(e.target.value)}\n                    onKeyPress = {(e) => onAddTodo(e)}\n                    checked = {isCheckAll}\n                    />\n                    \n        </header>\n\n    )\n})\nexport default Header;"]},"metadata":{},"sourceType":"module"}