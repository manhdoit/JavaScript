{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/components/Todo.js\";\nimport React, { memo, useState } from 'react';\nconst Todo = memo(props => {\n  const {\n    todo,\n    getTodoEditingId,\n    todoEditingId,\n    onEditTodo,\n    index\n  } = props;\n  const [text, setText] = useState(todo.text);\n  const isEditing = todoEditingId === todo.id;\n\n  const editTodo = () => {\n    onEditTodo({ ...todo,\n      text\n    }, index);\n  };\n\n  console.log('todo.id', todo.id);\n  console.log('todoEditingId', todoEditingId);\n  console.log('isEditing', isEditing);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: `${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, !isEditing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"view\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"toggle\",\n    type: \"checkbox\",\n    checked: todo.isCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    onDoubleClick: () => getTodoEditingId(todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, todo.text), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"delete\")) : /*#__PURE__*/React.createElement(\"input\", {\n    className: \"edit\",\n    type: \"text\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onBlur: editTodo,\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        editTodo();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }));\n});\nexport default Todo;","map":{"version":3,"sources":["/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/components/Todo.js"],"names":["React","memo","useState","Todo","props","todo","getTodoEditingId","todoEditingId","onEditTodo","index","text","setText","isEditing","id","editTodo","console","log","isCompleted","e","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,MAAMC,IAAI,GAAGF,IAAI,CAAEG,KAAK,IAAI;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,gBAAR;AAA0BC,IAAAA,aAA1B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA;AAArD,MAA+DL,KAArE;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACG,IAAI,CAACK,IAAN,CAAhC;AACA,QAAME,SAAS,GAAGL,aAAa,KAAKF,IAAI,CAACQ,EAAzC;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBN,IAAAA,UAAU,CAAE,EACR,GAAGH,IADK;AAERK,MAAAA;AAFQ,KAAF,EAGPD,KAHO,CAAV;AAIH,GALD;;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,IAAI,CAACQ,EAA5B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,aAA7B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,SAAzB;AACA,sBACI;AAAI,IAAA,SAAS,EAAG,GAAEA,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGP,IAAI,CAACY,WAAL,GAAmB,WAAnB,GAAiC,EAAG,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK,CAACL,SAAD,gBAED;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,UAA/B;AAA0C,IAAA,OAAO,EAAEP,IAAI,CAACY,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,aAAa,EAAE,MAAMX,gBAAgB,CAACD,IAAI,CAACQ,EAAN,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDR,IAAI,CAACK,IAA7D,CAFJ,eAGI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CAFC,gBAOD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAEA,IAHX;AAII,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;AAKI,IAAA,MAAM,EAAIN,QALd;AAMI,IAAA,UAAU,EAAGI,CAAD,IAAO;AACf,UAAIA,CAAC,CAACG,GAAF,KAAU,OAAd,EAAuB;AACnBP,QAAAA,QAAQ;AACX;AACJ,KAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAyBH,CAvCgB,CAAjB;AAyCA,eAAeX,IAAf","sourcesContent":["import React, { memo, useState } from 'react'\n\nconst Todo = memo( props => {\n    const { todo, getTodoEditingId, todoEditingId, onEditTodo, index } = props\n    const [text, setText] = useState(todo.text)\n    const isEditing = todoEditingId === todo.id\n    const editTodo = () => {\n        onEditTodo( {\n            ...todo,\n            text\n        }, index)\n    }\n\n    console.log('todo.id', todo.id);\n    console.log('todoEditingId', todoEditingId);\n    console.log('isEditing', isEditing);\n    return (\n        <li className={`${isEditing ? 'editing' : ''} ${todo.isCompleted ? 'completed' : ''}`}>\n            \n            {!isEditing ?\n            \n            <div className=\"view\">\n                <input className=\"toggle\" type=\"checkbox\" checked={todo.isCompleted}/>\n                <label onDoubleClick={() => getTodoEditingId(todo.id)}>{todo.text}</label>\n                <button className=\"delete\">delete</button>\n            </div> : \n            <input \n                className=\"edit\"\n                type=\"text\"\n                value={text}\n                onChange={e => setText(e.target.value)}\n                onBlur = {editTodo}\n                onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                        editTodo()\n                    }\n                }}\n            />\n            }\n        </li>\n    )\n})\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}