{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/App.js\";\nimport React, { PureComponent } from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst isNotCheckedAll = (todos = []) => todos.find(todo => todo.isCompleted);\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [{\n        id: 1,\n        text: 'todo 1',\n        isCompleted: true\n      }, {\n        id: 2,\n        text: 'todo 2',\n        isCompleted: false\n      }],\n      todoEditingId: ''\n    };\n\n    this.addTodo = (todo = {}) => {\n      this.setState(preState => ({\n        todoList: [...preState.todoList, todo]\n      }));\n    };\n\n    this.getTodoEditingId = (id = '') => {\n      this.setState({\n        todoEditingId: id\n      });\n    };\n\n    this.onEditTodo = (todo = {}, index = -1) => {\n      if (index >= 0) {\n        const {\n          todoList: list\n        } = this.state;\n        list.splice(index, 1, todo);\n        this.setState({\n          todoList: list,\n          todoEditingId: ''\n        });\n      }\n    };\n\n    this.markCompleted = (id = '') => {\n      this.setState(preState => ({\n        todoList: preState.todoList.map(todo => todo.id === id ? { ...todo,\n          isCompleted: !todo.isCompleted\n        } : todo)\n      }));\n    };\n  }\n\n  render() {\n    const {\n      todoList,\n      todoEditingId\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      addTodo: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ToDoList, {\n      todoList: todoList,\n      getTodoEditingId: this.getTodoEditingId,\n      todoEditingId: todoEditingId,\n      onEditTodo: this.onEditTodo,\n      markComplete: this.markCompleted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Documents/Development/JavaScript-Learn/ReactJS/To-do-list/src/App.js"],"names":["React","PureComponent","ToDoList","Header","Footer","isNotCheckedAll","todos","find","todo","isCompleted","App","state","todoList","id","text","todoEditingId","addTodo","setState","preState","getTodoEditingId","onEditTodo","index","list","splice","markCompleted","map","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport './App.css';\nimport ToDoList from './components/ToDoList';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nconst isNotCheckedAll = (todos = []) => todos.find(todo => todo.isCompleted)\nclass App extends PureComponent {\n  state = {\n    todoList: [\n      {\n      id: 1,\n      text: 'todo 1',\n      isCompleted: true\n    },\n    {\n      id: 2,\n      text: 'todo 2',\n      isCompleted: false\n    }\n  ],\n  todoEditingId: ''\n  }\n\n  addTodo = (todo = {}) => {\n    this.setState(preState => ({\n      todoList: [...preState.todoList, todo]\n    }))\n  }\n  getTodoEditingId = (id = '') => {\n    this.setState({\n      todoEditingId: id\n    })\n  } \n  \n  onEditTodo = (todo = {}, index = -1) => {\n    if(index >=0 ) {\n      const { todoList: list } = this.state\n      list.splice(index, 1, todo)\n      this.setState({\n        todoList: list,\n        todoEditingId: ''\n      })\n    }\n  }\n\n  markCompleted = ( id ='') =>{\n    this.setState(preState => ({\n      todoList: preState.todoList.map(todo => todo.id === id ? ({...todo, isCompleted: !todo.isCompleted}) : todo )\n    }))\n  }\n\n  render (){\n    const { todoList, todoEditingId } = this.state\n    return (\n    <div className=\"App\">\n      <section>\n      <Header addTodo = {this.addTodo}/>\n      <ToDoList \n        todoList={todoList}\n        getTodoEditingId = {this.getTodoEditingId}\n        todoEditingId = {todoEditingId}\n        onEditTodo = {this.onEditTodo}\n        markComplete = {this.markCompleted}\n      />\n      <Footer />\n      </section>\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}